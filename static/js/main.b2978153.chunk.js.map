{"version":3,"sources":["logo.svg","component.js","App.js","reportWebVitals.js","index.js"],"names":["Component","props","useState","enabled","setEnabled","text","type","onClick","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,G,MAAA,IAA0B,kC,+BC8C1BA,MAlCf,SAAmBC,GACf,MAA8BC,mBAAS,WAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAqBA,OACI,gCACI,6BAAKD,IACL,6BAAKF,EAAMI,OACX,wBAAQC,KAAK,SAASC,QAvBlB,WAOJH,EADU,WAAXD,EACY,WAGA,YAaX,uBCLGK,MA1Bf,WAKE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAAC,EAAD,CAAWV,KAAO,iCCfXW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2978153.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nimport {PythonShell} from 'python-shell';\r\n\r\n// let options = {\r\n//   mode: 'text',\r\n//   pythonPath: '../../../../AppData/Local/Programs/Python/Python39',\r\n//   pythonOptions: ['-u'], // get print results in real-time\r\n//   scriptPath: './test.py',\r\n//   // args: ['value1', 'value2', 'value3']\r\n// };\r\n\r\nfunction Component(props){\r\n    const [enabled, setEnabled] = useState(\"enabled\");\r\n\r\n    var click = function(){\r\n        // PythonShell.run('test.py', options, function (err, results) {\r\n        //     if (err) throw err;\r\n        //     // results is an array consisting of messages collected during execution\r\n        //     console.log('results: %j', results);\r\n        // });\r\n        if(enabled == \"enabled\"){\r\n            setEnabled(\"disabled\");\r\n        }\r\n        else{\r\n            setEnabled(\"enabled\");\r\n        }\r\n    }\r\n\r\n    // var test = () =>{\r\n        \r\n    //   };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{enabled}</h1>\r\n            <h2>{props.text}</h2>\r\n            <button type=\"button\" onClick = {click}>\r\n                Click\r\n            </button>\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Component;","import logo from './logo.svg';\nimport './App.css';\nimport Component from './component.js';\n\n\n\n\nfunction App() {\n\n  \n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <Component text = \"I'm just here to learn\"/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}